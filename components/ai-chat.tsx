"use client"

import { Copy, Sparkle, Check } from "lucide-react"
import { useState, useEffect } from "react"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardFooter, CardHeader, CardTitle } from "@/components/ui/card"
import { Avatar, AvatarFallback } from "@/components/ui/avatar"
import { Input } from "@/components/ui/input"
import { Send, Bot, User, Sparkles, Loader } from "lucide-react"

interface Message {
  id: string
  role: "user" | "assistant"
  content: string
}

interface AIChatProps {
  meetingId: string
  meetingTitle: string
  transcript: string
}

export function AIChat({ meetingId, meetingTitle, transcript }: AIChatProps) {
  const [messages, setMessages] = useState<Message[]>([
    {
      id: "welcome",
      role: "assistant",
      content: "–ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –≤—Å—Ç—Ä–µ—á–∏. –ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –æ–± —ç—Ç–æ–π –≤—Å—Ç—Ä–µ—á–µ?",
    },
  ])
  const [input, setInput] = useState("")
  const [isLoading, setIsLoading] = useState(false)
  const [copiedMessageId, setCopiedMessageId] = useState<string | null>(null)

  useEffect(() => {
  const fetchHistory = async () => {
    try {
      const token = localStorage.getItem("APP_JWT")
      const res = await fetch(`https://api.dapmeet.kz/api/chat/history?meeting_id=${meetingId}`, {
        headers: {
          Authorization: `Bearer ${token}`,
        },
      })
      if (!res.ok) throw new Error()
      const history = await res.json()
      if (Array.isArray(history) && history.length > 0) {
        setMessages(history)
      }
    } catch {
      console.warn("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞")
    }
  }

  fetchHistory()
}, [meetingId])

 

  const quickPrompts = [
    { label: "–ö—Ä–∞—Ç–∫–æ–µ —Ä–µ–∑—é–º–µ", emoji: "‚ú®", 
      prompt: `–°–¥–µ–ª–∞–π –∫—Ä–∞—Ç–∫–æ–µ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–µ —Ä–µ–∑—é–º–µ –æ–Ω–ª–∞–π–Ω-–≤—Å—Ç—Ä–µ—á–∏. –í–∫–ª—é—á–∏ —Å–ª–µ–¥—É—é—â–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã:

–¶–µ–ª—å –≤—Å—Ç—Ä–µ—á–∏ –∏ –æ—Å–Ω–æ–≤–Ω—ã–µ –æ–±—Å—É–∂–¥—ë–Ω–Ω—ã–µ —Ç–µ–º—ã ‚Äî —Å—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π —Å–∂–∞—Ç–æ, –Ω–æ –ø–æ —Å—É—â–µ—Å—Ç–≤—É.

–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤—Å—Ç—Ä–µ—á–∏ ‚Äî —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —Ä–æ–ª–µ–π, –µ—Å–ª–∏ —ç—Ç–æ –≤–∞–∂–Ω–æ.

–ö—Ä–∞—Ç–∫–∏–π –æ–±–∑–æ—Ä –∫–ª—é—á–µ–≤—ã—Ö –æ–±—Å—É–∂–¥–µ–Ω–∏–π ‚Äî –∏–∑–ª–æ–∂–∏ –±–µ–∑ –ª–∏—à–Ω–∏—Ö –¥–µ—Ç–∞–ª–µ–π, –Ω–æ —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ —Å—É—Ç—å –∏ —Å–¥–µ–ª–∞–Ω–Ω—ã–µ –≤—ã–≤–æ–¥—ã. –ë–µ–∑ –Ω—É–º–µ—Ä–∞—Ü–∏–∏.

–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ ‚Äî —á—ë—Ç–∫–æ —É–∫–∞–∂–∏, –∫—Ç–æ –∑–∞ —á—Ç–æ –æ—Ç–≤–µ—á–∞–µ—Ç –∏ –≤ –∫–∞–∫–∏–µ —Å—Ä–æ–∫–∏.

–£–ø–æ–º—è–Ω–∏, –µ—Å–ª–∏ –±—ã–ª–∞ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∞ –¥–∞—Ç–∞ —Å–ª–µ–¥—É—é—â–µ–π –≤—Å—Ç—Ä–µ—á–∏.

–°—Ç–∏–ª—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è ‚Äî –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π, –≤–∞–∂–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã –≤—ã–¥–µ–ª—è–π –∂–∏—Ä–Ω—ã–º —à—Ä–∏—Ñ—Ç–æ–º.

–ö—Ä–∞—Ç–∫–æ–µ —Ä–µ–∑—é–º–µ –∏ –¥–µ–π—Å—Ç–≤–∏—è`
    },
    { label: "–ü–æ–¥—Ä–æ–±–Ω–æ–µ —Ä–µ–∑—é–º–µ", emoji: "üß†", 
      prompt: `–°–æ–∑–¥–∞–π –ø–æ–¥—Ä–æ–±–Ω–æ–µ —Ä–µ–∑—é–º–µ –æ–Ω–ª–∞–π–Ω-–≤—Å—Ç—Ä–µ—á–∏. –í–∫–ª—é—á–∏ —Å–ª–µ–¥—É—é—â–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –±–ª–æ–∫–∏:

–ö–æ–Ω—Ç–µ–∫—Å—Ç –∏ –ø–æ–≤–µ—Å—Ç–∫–∞ –≤—Å—Ç—Ä–µ—á–∏ ‚Äî 1‚Äì2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —Ü–µ–ª–∏ –≤—Å—Ç—Ä–µ—á–∏ –∏ –∫–ª—é—á–µ–≤—ã—Ö —Ç–µ–º –æ–±—Å—É–∂–¥–µ–Ω–∏—è.

–û–±—â–∏–µ —Å–≤–µ–¥–µ–Ω–∏—è –æ –≤—Å—Ç—Ä–µ—á–µ ‚Äî —É–∫–∞–∂–∏ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è (–≤–∫–ª—é—á–∞—è —Ç–æ—á–Ω–æ–µ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è), —Ñ–æ—Ä–º–∞—Ç –≤—Å—Ç—Ä–µ—á–∏ (–æ–Ω–ª–∞–π–Ω/–≥–∏–±—Ä–∏–¥–Ω—ã–π), –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è (Zoom, Teams, Google Meet –∏ —Ç.–¥.) –∏ —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å –∏—Ö —Ä–æ–ª—è–º–∏ (–µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ).

–û–±—Å—É–∂–¥–∞–µ–º—ã–µ —Ç–µ–º—ã –∏ –ø–æ–¥—Ä–æ–±–Ω–æ–µ —Ä–µ–∑—é–º–µ ‚Äî –ø—Ä–µ–¥—Å—Ç–∞–≤—å –Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–ª—é—á–µ–≤—ã—Ö —Ç–µ–º, –ø–æ–¥–Ω—è—Ç—ã—Ö –Ω–∞ –≤—Å—Ç—Ä–µ—á–µ, –∏ –ø–æ –∫–∞–∂–¥–æ–π —Ç–µ–º–µ –ø–æ–¥—Ä–æ–±–Ω–æ –æ–ø–∏—à–∏, —á—Ç–æ –æ–±—Å—É–∂–¥–∞–ª–æ—Å—å. –ò—Å–ø–æ–ª—å–∑—É–π –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–∫–∏, –ª–æ–≥–∏—á–Ω—ã–π –ø–µ—Ä–µ—Å–∫–∞–∑, –æ—Ç—Ä–∞–∑–∏ –º–Ω–µ–Ω–∏—è, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ –≤—ã–≤–æ–¥—ã —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.

–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ –¥–µ–π—Å—Ç–≤–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ ‚Äî –ø–µ—Ä–µ—á–∏—Å–ª–∏ –ø—Ä–∏–Ω—è—Ç—ã–µ —Ä–µ—à–µ–Ω–∏—è –∏ –¥–æ–≥–æ–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ (–≤–∫–ª—é—á–∞—è —Ü–∏—Ñ—Ä—ã, —Å—Ä–æ–∫–∏, –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏), –∑–∞—Ç–µ–º —Ä–∞—Å–ø–∏—à–∏ —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏ –∏ –∑–∞–¥–∞—á–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞, –≤–∫–ª—é—á–∞—è —Å—Ä–æ–∫–∏. –£–∫–∞–∂–∏ —Ç–∞–∫–∂–µ –æ—Ç–∫—Ä—ã—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã, –ø–µ—Ä–µ–Ω–µ—Å—ë–Ω–Ω—ã–µ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –≤—Å—Ç—Ä–µ—á—É.

–¶–∏—Ç–∞—Ç—ã –∏ –∑–∞–º–µ—á–∞–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ ‚Äî –≤–∫–ª—é—á–∏ –∫–ª—é—á–µ–≤—ã–µ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∏, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã –∏ —Å–æ–º–Ω–µ–Ω–∏—è, –ø—Ä–æ–∑–≤—É—á–∞–≤—à–∏–µ –≤ —Ö–æ–¥–µ –æ–±—Å—É–∂–¥–µ–Ω–∏—è.

–î–∞—Ç–∞ —Å–ª–µ–¥—É—é—â–µ–π –≤—Å—Ç—Ä–µ—á–∏ ‚Äî –µ—Å–ª–∏ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∞.

–í–µ—Å—å —Ç–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –ø–æ —Å—Ç–∏–ª—é. –ö–ª—é—á–µ–≤—ã–µ –¥–µ—Ç–∞–ª–∏ –∏ –≤–∞–∂–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã –≤—ã–¥–µ–ª—è–π –∂–∏—Ä–Ω—ã–º —à—Ä–∏—Ñ—Ç–æ–º –¥–ª—è –∞–∫—Ü–µ–Ω—Ç–∞.`  
    },
    { label: "–û—Ü–µ–Ω–∏—Ç—å –ü—Ä–æ–¥–∞–∂—É", emoji: "üìç", 
      prompt:  `–ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç—Ä–µ–Ω–µ—Ä –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º. –ù–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏ –≤—Å—Ç—Ä–µ—á–∏ —Å –∫–ª–∏–µ–Ω—Ç–æ–º –ø–æ –Ω–æ–≤–æ–π –ø—Ä–æ–¥–∞–∂–µ, –≤—ã–ø–æ–ª–Ω–∏ –æ—Ü–µ–Ω–∫—É —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–æ –∫–ª—é—á–µ–≤—ã–º —ç—Ç–∞–ø–∞–º –ø—Ä–æ–¥–∞–∂:

–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ

–í—ã—è–≤–ª–µ–Ω–∏–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π

–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞/—É—Å–ª—É–≥–∏

–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–∑—Ä–∞–∂–µ–Ω–∏–π

–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–¥–µ–ª–∫–∏/–≤—Å—Ç—Ä–µ—á–∏

–î–ª—è –∫–∞–∂–¥–æ–≥–æ —ç—Ç–∞–ø–∞:

–ü–æ—Å—Ç–∞–≤—å –æ—Ü–µ–Ω–∫—É –æ—Ç 1 –¥–æ 100;

–ö—Ä–∞—Ç–∫–æ –æ–±–æ—Å–Ω—É–π, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å —Ü–∏—Ç–∞—Ç—ã –∏ –ø–æ—á–µ–º—É –ø–æ—Å—Ç–∞–≤–ª–µ–Ω –∏–º–µ–Ω–Ω–æ —Ç–∞–∫–æ–π –±–∞–ª–ª;

–î–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é –Ω–∞–≤—ã–∫–æ–≤.

–ó–∞—Ç–µ–º –¥–æ–±–∞–≤—å –±–ª–æ–∫:

–û–±—â–µ–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ:
‚Äì –°–¥–µ–ª–∞–π –∫—Ä–∞—Ç–∫–∏–π –≤—ã–≤–æ–¥ –ø–æ –≤—Å—Ç—Ä–µ—á–µ –≤ —Ü–µ–ª–æ–º,
‚Äì –£–∫–∞–∂–∏ –æ–±—â—É—é –æ—Ü–µ–Ω–∫—É –ø–æ —à–∫–∞–ª–µ –æ—Ç 1 –¥–æ 100,
‚Äì –û–ø—Ä–µ–¥–µ–ª–∏ 2‚Äì3 –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞.

–û—Ç—á—ë—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º, –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–º –∏ –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –Ω–∞ —Ä–æ—Å—Ç. –ò–∑–±–µ–≥–∞–π –æ–±—â–µ–π –∫—Ä–∏—Ç–∏–∫–∏ ‚Äî —Ñ–æ–∫—É—Å–∏—Ä—É–π—Å—è –Ω–∞ –æ–±—É—á–µ–Ω–∏–∏ –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö —Å–æ–≤–µ—Ç–∞—Ö.`
    }
    // { label: "–†–µ–∑—é–º–µ + –¥–µ–π—Å—Ç–≤–∏—è", emoji: "üß†", prompt: "–°–¥–µ–ª–∞–π —Ä–µ–∑—é–º–µ –∏ –≤—ã–¥–µ–ª–∏ –¥–µ–π—Å—Ç–≤–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å" },
    // { label: "–†–µ–∑—é–º–µ –ø–æ –ø–æ–≤–µ—Å—Ç–∫–µ", emoji: "üìç", prompt: "–°–¥–µ–ª–∞–π —Ä–µ–∑—é–º–µ –≤—Å—Ç—Ä–µ—á–∏, –æ—Ä–∏–µ–Ω—Ç–∏—Ä—É—è—Å—å –Ω–∞ –ø–æ–≤–µ—Å—Ç–∫—É" },
    // { label: "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏—è", emoji: "‚ú®", prompt: "–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π —Å–ø–∏—Å–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –≤—Å—Ç—Ä–µ—á–∏" },
  ]

  const sendMessage = async (visible: string, actualPrompt: string) => {
    const userMessage: Message = {
      id: Date.now().toString(),
      role: "user",
      content: visible,
    }
  
    const updated = [...messages, userMessage]
    setMessages(updated)
    setInput("")
    setIsLoading(true)
  
    try {
      const context = `–í—Å—Ç—Ä–µ—á–∞: ${meetingTitle}\n–¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç:\n${transcript}`
    
        const res = await fetch("/api/chat", {
        method: "POST",
        headers: {
  	"Content-Type": "application/json"	
	},
        body: JSON.stringify({ prompt: actualPrompt, context }),
      })
  
      const data = await res.json()
  
      const assistantMessage: Message = {
        id: Date.now().toString(),
        role: "assistant",
        content: data.text,
      }
  
      const newHistory = [...updated, assistantMessage]
      setMessages(newHistory)
  
      // üëá Save chat history to backend
      const token = localStorage.getItem("APP_JWT")
      await fetch("https://api.dapmeet.kz/api/chat/history", {
        method: "POST",
        headers: { "Content-Type": "application/json",
Authorization: `Bearer ${token}` },
        body: JSON.stringify({
          meeting_id: meetingId,
          history: newHistory,
        }),
      })
    } catch {
      setMessages((prev) => [
        ...prev,
        {
          id: Date.now().toString(),
          role: "assistant",
          content: "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
        },
      ])
    } finally {
      setIsLoading(false)
    }
  }
  
  

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault()
    sendMessage(input, input)
  }

  const formatAIContent = (text: string) => {
    return text
      .replace(/\\n/g, "\n")                         // –∑–∞–º–µ–Ω–∞ \n –Ω–∞ \n
      .replace(/(?:\r\n|\r|\n)/g, "<br/>")            // —Ä–µ–∞–ª—å–Ω—ã–π –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏
      .replace(/(\*\*|__)(.*?)\1/g, "<strong>$2</strong>") // –∂–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç **—Ç–µ–∫—Å—Ç**
      .replace(/([–ê-–ØA-Z][–∞-—èa-z]+):/g, "<strong>$1:</strong>") // –∏–º–µ–Ω–∞ –≥–æ–≤–æ—Ä—è—â–∏—Ö
  }
  

  return (
    <Card className="flex flex-col w-full">
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <Bot className="h-5 w-5" />
          –ò–ò
        </CardTitle>
      </CardHeader>

      {/* –ë—ã—Å—Ç—Ä—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ */}
      <CardContent className="pb-0">
        <div className="grid grid-cols-2 gap-2">
          {quickPrompts.map(({ label, emoji, prompt }, idx) => (
            <button
              key={idx}
              onClick={() => sendMessage(label, prompt)}
              disabled={isLoading}
              className="flex items-center gap-2 rounded-md bg-white text-black px-4 py-2 text-left text-sm font-medium shadow hover:bg-blue-100 transition-colors"
            >
              <span className="text-xl">{emoji}</span>
              {label}
            </button>
          ))}
        </div>
      </CardContent>

      <div className="h-5" />

      {/* –°–æ–æ–±—â–µ–Ω–∏—è */}
      <CardContent className="pt-2 space-y-2">
        <div className="min-h-[60px] max-h-[400px] overflow-y-auto space-y-2 pr-1">
        {messages.map((m) => (
  <div key={m.id} className={`flex ${m.role === "user" ? "justify-end" : "justify-start"}`}>
    <div className="flex items-start gap-2 max-w-[80%]">
      {m.role === "assistant" && (
        <Avatar className="h-6 w-6">
          <AvatarFallback className="bg-white text-blue text-xs">
            <Sparkles />
          </AvatarFallback>
        </Avatar>
      )}
      <div className="relative group">
        <div
          className={`rounded-lg px-3 py-1 text-sm ${m.role === "user" ? "bg-primary text-white" : "bg-muted"}`}
          dangerouslySetInnerHTML={{
            __html: m.role === "assistant" ? formatAIContent(m.content) : m.content,
          }}
        />
        {m.role === "assistant" && (
  <button
    onClick={() => {
      navigator.clipboard.writeText(m.content)
      setCopiedMessageId(m.id)
      setTimeout(() => setCopiedMessageId(null), 1500)
    }}
    className="absolute right-0 top-0 opacity-0 group-hover:opacity-100 transition-opacity"
    title="–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å"
  >
    {copiedMessageId === m.id ? (
      <Check className="w-6 h-6 text-green-500" />
    ) : (
      <Copy className="w-6 h-6 text-muted-foreground hover:text-foreground" />
    )}
  </button>
)}

      </div>
      {m.role === "user" && (
        <Avatar className="h-6 w-6">
          <AvatarFallback>
            <User className="h-4 w-4" />
          </AvatarFallback>
        </Avatar>
      )}
    </div>
  </div>
))}

{isLoading && (
  <div className="flex justify-start">
    <div className="flex items-center gap-2 max-w-[80%]">
      <Avatar className="h-6 w-6">
        <AvatarFallback className="bg-white text-blue text-xs">
          <Sparkle className="animate-spin" />
        </AvatarFallback>
      </Avatar>
      <div className="rounded-lg bg-muted px-3 py-1 text-sm text-muted-foreground animate-pulse">
        –î—É–º–∞—é...
      </div>
    </div>
  </div>
)}

        </div>
      </CardContent>

      {/* –ü–æ–ª–µ –≤–≤–æ–¥–∞ */}
      <CardFooter className="border-t p-2">
        <form onSubmit={handleSubmit} className="flex w-full gap-2">
          <Input
            placeholder="–í–∞—à –≤–æ–ø—Ä–æ—Å..."
            value={input}
            onChange={(e) => setInput(e.target.value)}
            disabled={isLoading}
            className="text-sm"
          />
          <Button type="submit" size="icon" disabled={isLoading} className="bg-black">
            <Send className="h-4 w-4" />
          </Button>
        </form>
      </CardFooter>
    </Card>
  )
}
